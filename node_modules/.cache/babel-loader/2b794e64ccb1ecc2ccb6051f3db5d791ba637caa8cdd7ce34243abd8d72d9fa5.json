{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\OneDrive\\\\Desktop\\\\college\\\\web devlopment\\\\Zepto Prject\\\\my-ap\\\\src\\\\CanvasEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  templateData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [captionTextColor, setCaptionTextColor] = useState(templateData.caption.text_color);\n  const [caption, setCaption] = useState(templateData.caption.text);\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw background color\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Load design pattern\n    const designPattern = new Image();\n    designPattern.src = addRandomQueryParam(templateData.urls.design_pattern);\n    designPattern.onload = () => {\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\n\n      // Apply mask\n      const mask = new Image();\n      mask.src = addRandomQueryParam(templateData.urls.mask);\n      mask.onload = () => {\n        ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n\n        // Apply mask stroke\n        const maskStroke = new Image();\n        maskStroke.src = addRandomQueryParam(templateData.urls.stroke);\n        maskStroke.onload = () => {\n          ctx.drawImage(maskStroke, templateData.image_mask.x + 1, templateData.image_mask.y + 1, templateData.image_mask.width, templateData.image_mask.height);\n\n          // Draw caption\n          drawText(ctx, caption, templateData.caption, captionTextColor);\n\n          // Draw call to action\n          drawCTA(ctx, callToAction, templateData.cta);\n        };\n      };\n    };\n  }, []);\n  const handleCaptionChange = event => {\n    setCaption(event.target.value);\n  };\n  const handleCallToActionChange = event => {\n    setCallToAction(event.target.value);\n  };\n  const handleBackgroundColorChange = color => {\n    setBackgroundColor(color.hex);\n  };\n  const handleCaptionTextColorChange = color => {\n    setCaptionTextColor(color.hex);\n  };\n  const addRandomQueryParam = url => {\n    const randomQueryParam = Math.floor(Math.random() * 100000); // Generate a random number\n    return `${url}?random=${randomQueryParam}`;\n  };\n  const drawText = (ctx, text, data, textColor) => {\n    ctx.fillStyle = textColor;\n    ctx.font = `${data.font_size}px Arial`;\n    ctx.textAlign = data.alignment;\n    const lines = breakTextIntoLines(ctx, text, data.max_characters_per_line);\n    let offsetY = data.position.y;\n    lines.forEach(line => {\n      // Ensure text is drawn within canvas boundaries\n      if (offsetY + data.font_size <= canvasRef.current.height) {\n        ctx.fillText(line, data.position.x, offsetY);\n      }\n      offsetY += data.font_size + 5; // Adjust for line spacing\n    });\n  };\n  const drawCTA = (ctx, text, data) => {\n    ctx.fillStyle = data.text_color;\n    ctx.font = `${data.font_size || 30}px Arial`;\n    const ctaWidth = ctx.measureText(text).width + 48;\n    const ctaHeight = data.font_size + 24;\n    const ctaX = data.position.x;\n    const ctaY = data.position.y;\n    const cornerRadius = 10;\n\n    // Draw rounded rectangle\n    ctx.beginPath();\n    ctx.moveTo(ctaX + cornerRadius, ctaY);\n    ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\n    ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\n    ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\n    ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\n    ctx.closePath();\n    ctx.fillStyle = data.background_color;\n    ctx.fill();\n\n    // Draw text\n    ctx.fillStyle = data.text_color;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(text, ctaX + ctaWidth / 2, ctaY + ctaHeight / 2);\n  };\n  const breakTextIntoLines = (ctx, text, maxWidth) => {\n    const words = text.split(' ');\n    const lines = [];\n    let currentLine = '';\n    words.forEach(word => {\n      const width = ctx.measureText(`${currentLine} ${word}`).width;\n      if (width < maxWidth || currentLine === '') {\n        currentLine += (currentLine === '' ? '' : ' ') + word;\n      } else {\n        lines.push(currentLine);\n        currentLine = word;\n      }\n    });\n    lines.push(currentLine); // Push the last line\n    return lines;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1080,\n      height: 1080,\n      className: \"border border-gray-400\",\n      style: {\n        width: '400px',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: caption,\n        onChange: handleCaptionChange,\n        placeholder: \"Enter Caption\",\n        className: \"border border-gray-400 p-2 mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: callToAction,\n        onChange: handleCallToActionChange,\n        placeholder: \"Enter CTA Text\",\n        className: \"border border-gray-400 p-2 mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: backgroundColor,\n          onChangeComplete: handleBackgroundColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: captionTextColor,\n          onChangeComplete: handleCaptionTextColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"pWeTwGx7YrD0sAeenOY6cKipt0c=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ChromePicker","jsxDEV","_jsxDEV","CanvasEditor","templateData","_s","canvasRef","captionTextColor","setCaptionTextColor","caption","text_color","setCaption","text","callToAction","setCallToAction","cta","backgroundColor","setBackgroundColor","canvas","current","ctx","getContext","clearRect","width","height","fillStyle","fillRect","designPattern","Image","src","addRandomQueryParam","urls","design_pattern","onload","drawImage","mask","image_mask","x","y","maskStroke","stroke","drawText","drawCTA","handleCaptionChange","event","target","value","handleCallToActionChange","handleBackgroundColorChange","color","hex","handleCaptionTextColorChange","url","randomQueryParam","Math","floor","random","data","textColor","font","font_size","textAlign","alignment","lines","breakTextIntoLines","max_characters_per_line","offsetY","position","forEach","line","fillText","ctaWidth","measureText","ctaHeight","ctaX","ctaY","cornerRadius","beginPath","moveTo","arcTo","closePath","background_color","fill","textBaseline","maxWidth","words","split","currentLine","word","push","className","children","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onChangeComplete","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/OneDrive/Desktop/college/web devlopment/Zepto Prject/my-ap/src/CanvasEditor.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport './styles.css'\r\n\r\nconst CanvasEditor = ({ templateData }) => {\r\n  const canvasRef = useRef(null);\r\n  const [captionTextColor, setCaptionTextColor] = useState(templateData.caption.text_color);\r\n  const [caption, setCaption] = useState(templateData.caption.text);\r\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\r\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw background color\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Load design pattern\r\n    const designPattern = new Image();\r\n    designPattern.src = addRandomQueryParam(templateData.urls.design_pattern);\r\n    designPattern.onload = () => {\r\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Apply mask\r\n      const mask = new Image();\r\n      mask.src = addRandomQueryParam(templateData.urls.mask);\r\n      mask.onload = () => {\r\n        ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n\r\n        // Apply mask stroke\r\n        const maskStroke = new Image();\r\n        maskStroke.src = addRandomQueryParam(templateData.urls.stroke);\r\n        maskStroke.onload = () => {\r\n          ctx.drawImage(maskStroke, templateData.image_mask.x+1, templateData.image_mask.y+1, templateData.image_mask.width, templateData.image_mask.height);\r\n\r\n          // Draw caption\r\n          drawText(ctx, caption, templateData.caption, captionTextColor);\r\n\r\n          // Draw call to action\r\n          drawCTA(ctx, callToAction, templateData.cta);\r\n        };\r\n      };\r\n    };\r\n  }, []);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleCallToActionChange = (event) => {\r\n    setCallToAction(event.target.value);\r\n  };\r\n\r\n  const handleBackgroundColorChange = (color) => {\r\n    setBackgroundColor(color.hex);\r\n  };\r\n\r\n  const handleCaptionTextColorChange = (color) => {\r\n    setCaptionTextColor(color.hex);\r\n  };\r\n\r\n  const addRandomQueryParam = (url) => {\r\n    const randomQueryParam = Math.floor(Math.random() * 100000); // Generate a random number\r\n    return `${url}?random=${randomQueryParam}`;\r\n  };\r\n\r\n  const drawText = (ctx, text, data, textColor) => {\r\n    ctx.fillStyle = textColor;\r\n    ctx.font = `${data.font_size}px Arial`;\r\n    ctx.textAlign = data.alignment;\r\n\r\n    const lines = breakTextIntoLines(ctx, text, data.max_characters_per_line);\r\n    let offsetY = data.position.y;\r\n    lines.forEach((line) => {\r\n      // Ensure text is drawn within canvas boundaries\r\n      if (offsetY + data.font_size <= canvasRef.current.height) {\r\n        ctx.fillText(line, data.position.x, offsetY);\r\n      }\r\n      offsetY += data.font_size + 5; // Adjust for line spacing\r\n    });\r\n  };\r\n\r\n  const drawCTA= (ctx, text, data) => {\r\n    ctx.fillStyle = data.text_color;\r\n    ctx.font = `${data.font_size || 30}px Arial`;\r\n    const ctaWidth = ctx.measureText(text).width + 48;\r\n    const ctaHeight = data.font_size + 24;\r\n    const ctaX = data.position.x;\r\n    const ctaY = data.position.y;\r\n    const cornerRadius = 10;\r\n\r\n    // Draw rounded rectangle\r\n    ctx.beginPath();\r\n    ctx.moveTo(ctaX + cornerRadius, ctaY);\r\n    ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\r\n    ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\r\n    ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\r\n    ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\r\n    ctx.closePath();\r\n\r\n    ctx.fillStyle = data.background_color;\r\n    ctx.fill();\r\n\r\n    // Draw text\r\n    ctx.fillStyle = data.text_color;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillText(text, ctaX + ctaWidth / 2, ctaY + ctaHeight / 2);\r\n  };\r\n\r\n  const breakTextIntoLines = (ctx, text, maxWidth) => {\r\n    const words = text.split(' ');\r\n    const lines = [];\r\n    let currentLine = '';\r\n\r\n    words.forEach((word) => {\r\n      const width = ctx.measureText(`${currentLine} ${word}`).width;\r\n      if (width < maxWidth || currentLine === '') {\r\n        currentLine += (currentLine === '' ? '' : ' ') + word;\r\n      } else {\r\n        lines.push(currentLine);\r\n        currentLine = word;\r\n      }\r\n    });\r\n    lines.push(currentLine); // Push the last line\r\n    return lines;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={1080}\r\n        height={1080}\r\n        className=\"border border-gray-400\"\r\n        style={{ width: '400px', height: '400px' }}\r\n      />\r\n      <div className=\"mt-4 flex flex-col items-center\">\r\n        <input\r\n          type=\"text\"\r\n          value={caption}\r\n          onChange={handleCaptionChange}\r\n          placeholder=\"Enter Caption\"\r\n          className=\"border border-gray-400 p-2 mb-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={callToAction}\r\n          onChange={handleCallToActionChange}\r\n          placeholder=\"Enter CTA Text\"\r\n          className=\"border border-gray-400 p-2 mb-2\"\r\n        />\r\n        <div className=\"color-picker\">\r\n          <ChromePicker color={backgroundColor} onChangeComplete={handleBackgroundColorChange} />\r\n        </div>\r\n        <div className=\"color-picker\">\r\n          <ChromePicker color={captionTextColor} onChangeComplete={handleCaptionTextColorChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}