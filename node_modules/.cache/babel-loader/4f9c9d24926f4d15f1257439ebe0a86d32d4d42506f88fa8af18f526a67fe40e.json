{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\OneDrive\\\\Desktop\\\\college\\\\web devlopment\\\\Zepto Prject\\\\my-ap\\\\src\\\\CanvasEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  templateData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [caption, setCaption] = useState(templateData.caption.text);\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const MAX_PICKED_COLORS = 5;\n  const [pickedColors, setPickedColors] = useState(getRandomColors());\n  const [maskImage, setMaskImage] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw background color\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Load design pattern\n    const designPattern = new Image();\n    designPattern.src = templateData.urls.design_pattern;\n    designPattern.onload = () => {\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\n\n      // Apply mask\n      if (maskImage) {\n        ctx.drawImage(maskImage, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n      } else {\n        const mask = new Image();\n        mask.src = addRandomQueryParam(templateData.urls.mask);\n        mask.onload = () => {\n          ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n        };\n      }\n\n      // Apply mask stroke\n      ctx.save();\n      ctx.strokeStyle = 'white';\n      ctx.lineWidth = 10;\n      ctx.strokeRect(templateData.image_mask.x - 5, templateData.image_mask.y - 5, templateData.image_mask.width + 10, templateData.image_mask.height + 10);\n      ctx.restore();\n\n      // Draw caption\n      drawText(ctx, caption, templateData.caption);\n\n      // Draw call to action\n      drawCTA(ctx, callToAction, templateData.cta);\n    };\n  }, [backgroundColor, caption, callToAction, maskImage, templateData]);\n  const handleCaptionChange = event => {\n    setCaption(event.target.value);\n  };\n  const handleCallToActionChange = event => {\n    setCallToAction(event.target.value);\n  };\n  const handleBackgroundColorChange = color => {\n    setBackgroundColor(color.hex);\n    let newColors = [color.hex, ...pickedColors];\n    if (newColors.length > 5) {\n      newColors.pop();\n    }\n    setPickedColors(newColors);\n  };\n  const handleColorPickerToggle = () => {\n    setShowColorPicker(!showColorPicker);\n  };\n  const handleMaskImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const image = new Image();\n        image.onload = () => {\n          setMaskImage(image);\n        };\n        image.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n      setImageFile(file);\n    }\n  };\n  const addRandomQueryParam = url => {\n    const randomQueryParam = Math.floor(Math.random() * 100000);\n    return `${url}?random=${randomQueryParam}`;\n  };\n  const drawText = (ctx, text, data) => {\n    ctx.fillStyle = data.text_color;\n    ctx.font = `${data.font_size}px Arial`;\n    ctx.textAlign = data.alignment;\n    const lines = breakTextIntoLines(text, data.max_characters_per_line);\n    let offsetY = data.position.y;\n    lines.forEach(line => {\n      ctx.fillText(line, data.position.x, offsetY);\n      offsetY += data.font_size + 5;\n    });\n  };\n  const drawCTA = (ctx, text, data) => {\n    const wrapText = (text, wrapLength) => {\n      const words = text.split(' ');\n      const lines = [];\n      let currentLine = '';\n      words.forEach(word => {\n        const testLine = currentLine + word + ' ';\n        const testWidth = ctx.measureText(testLine).width;\n        if (testWidth > wrapLength && currentLine !== '') {\n          lines.push(currentLine);\n          currentLine = word + ' ';\n        } else {\n          currentLine = testLine;\n        }\n      });\n      lines.push(currentLine);\n      return lines;\n    };\n    const ctaX = data.position.x;\n    const ctaY = data.position.y;\n    const ctaWidth = data.width || 200;\n    const ctaHeight = data.height || 80;\n    const cornerRadius = data.cornerRadius || 10;\n    const textColor = data.text_color || 'white';\n    const bgColor = data.backgroundColor || 'black';\n    const padding = data.padding || 16;\n    const wrapLength = data.wrapLength || 20;\n    ctx.beginPath();\n    ctx.moveTo(ctaX + cornerRadius, ctaY);\n    ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\n    ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\n    ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\n    ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\n    ctx.closePath();\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n    ctx.fillStyle = textColor;\n    ctx.font = `${data.font_size || 30}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    const wrappedText = wrapText(text, wrapLength);\n    const lineHeight = ctx.measureText('M').width;\n    const textY = ctaY + ctaHeight / 2 - lineHeight * wrappedText.length / 2;\n    wrappedText.forEach((line, index) => {\n      ctx.fillText(line, ctaX + ctaWidth / 2, textY + index * lineHeight + padding / 2);\n    });\n  };\n  function getRandomColors() {\n    const colors = [];\n    for (let i = 0; i < MAX_PICKED_COLORS; i++) {\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\n    }\n    return colors;\n  }\n  const breakTextIntoLines = (text, maxCharactersPerLine) => {\n    const lines = [];\n    let currentLine = '';\n    for (let i = 0; i < text.length; i++) {\n      currentLine += text[i];\n      if (currentLine.length === maxCharactersPerLine || i === text.length - 1) {\n        lines.push(currentLine);\n        currentLine = '';\n      }\n    }\n    return lines;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1080,\n      height: 1080,\n      className: \"border border-gray-400\",\n      style: {\n        width: '400px',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Insert your image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file-upload\",\n            accept: \"image/*\",\n            onChange: handleMaskImageUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            children: \"Choose file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"file-name\",\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex flex-col items-center\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: caption,\n          onChange: handleCaptionChange,\n          style: {\n            width: \"100%\"\n          },\n          placeholder: \"Enter Caption\",\n          className: \"border border-gray-400 p-2 mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: callToAction,\n          onChange: handleCallToActionChange,\n          style: {\n            width: \"100%\"\n          },\n          placeholder: \"Enter CTA Text\",\n          className: \"border border-gray-400 p-2 mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-list\",\n            children: [pickedColors.slice(0, 5).map((color, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"color-box\",\n              style: {\n                backgroundColor: color\n              },\n              onClick: () => setBackgroundColor(color)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"color-picker-btn\",\n              onClick: handleColorPickerToggle,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), showColorPicker && /*#__PURE__*/_jsxDEV(ChromePicker, {\n            color: backgroundColor,\n            onChange: handleBackgroundColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"xzNyXNhElsBRGElGXmj/o4pbMEY=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ChromePicker","jsxDEV","_jsxDEV","CanvasEditor","templateData","_s","canvasRef","caption","setCaption","text","callToAction","setCallToAction","cta","backgroundColor","setBackgroundColor","showColorPicker","setShowColorPicker","MAX_PICKED_COLORS","pickedColors","setPickedColors","getRandomColors","maskImage","setMaskImage","imageFile","setImageFile","canvas","current","ctx","getContext","clearRect","width","height","fillStyle","fillRect","designPattern","Image","src","urls","design_pattern","onload","drawImage","image_mask","x","y","mask","addRandomQueryParam","save","strokeStyle","lineWidth","strokeRect","restore","drawText","drawCTA","handleCaptionChange","event","target","value","handleCallToActionChange","handleBackgroundColorChange","color","hex","newColors","length","pop","handleColorPickerToggle","handleMaskImageUpload","file","files","reader","FileReader","e","image","result","readAsDataURL","url","randomQueryParam","Math","floor","random","data","text_color","font","font_size","textAlign","alignment","lines","breakTextIntoLines","max_characters_per_line","offsetY","position","forEach","line","fillText","wrapText","wrapLength","words","split","currentLine","word","testLine","testWidth","measureText","push","ctaX","ctaY","ctaWidth","ctaHeight","cornerRadius","textColor","bgColor","padding","beginPath","moveTo","arcTo","closePath","fill","textBaseline","wrappedText","lineHeight","textY","index","colors","i","toString","maxCharactersPerLine","className","children","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","htmlFor","display","justifyContent","alignItems","placeholder","slice","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/OneDrive/Desktop/college/web devlopment/Zepto Prject/my-ap/src/CanvasEditor.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport './styles.css';\r\n\r\nconst CanvasEditor = ({ templateData }) => {\r\n  const canvasRef = useRef(null);\r\n  const [caption, setCaption] = useState(templateData.caption.text);\r\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\r\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const MAX_PICKED_COLORS = 5;\r\n  const [pickedColors, setPickedColors] = useState(getRandomColors());\r\n  const [maskImage, setMaskImage] = useState(null);\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw background color\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Load design pattern\r\n    const designPattern = new Image();\r\n    designPattern.src = templateData.urls.design_pattern;\r\n    designPattern.onload = () => {\r\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Apply mask\r\n      if (maskImage) {\r\n        ctx.drawImage(maskImage, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n      } else {\r\n        const mask = new Image();\r\n        mask.src = addRandomQueryParam(templateData.urls.mask);\r\n        mask.onload = () => {\r\n          ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n        };\r\n      }\r\n\r\n      // Apply mask stroke\r\n      ctx.save();\r\n      ctx.strokeStyle = 'white';\r\n      ctx.lineWidth = 10;\r\n      ctx.strokeRect(templateData.image_mask.x - 5, templateData.image_mask.y - 5, templateData.image_mask.width + 10, templateData.image_mask.height + 10);\r\n      ctx.restore();\r\n\r\n      // Draw caption\r\n      drawText(ctx, caption, templateData.caption);\r\n\r\n      // Draw call to action\r\n      drawCTA(ctx, callToAction, templateData.cta);\r\n    };\r\n  }, [backgroundColor, caption, callToAction, maskImage, templateData]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleCallToActionChange = (event) => {\r\n    setCallToAction(event.target.value);\r\n  };\r\n\r\n  const handleBackgroundColorChange = (color) => {\r\n    setBackgroundColor(color.hex);\r\n    let newColors = [color.hex, ...pickedColors];\r\n    if (newColors.length > 5) {\r\n      newColors.pop();\r\n    }\r\n    setPickedColors(newColors);\r\n  };\r\n\r\n  const handleColorPickerToggle = () => {\r\n    setShowColorPicker(!showColorPicker);\r\n  };\r\n\r\n  const handleMaskImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const image = new Image();\r\n        image.onload = () => {\r\n          setMaskImage(image);\r\n        };\r\n        image.src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n      setImageFile(file);\r\n    }\r\n  };\r\n\r\n  const addRandomQueryParam = (url) => {\r\n    const randomQueryParam = Math.floor(Math.random() * 100000);\r\n    return `${url}?random=${randomQueryParam}`;\r\n  };\r\n\r\n  const drawText = (ctx, text, data) => {\r\n    ctx.fillStyle = data.text_color;\r\n    ctx.font = `${data.font_size}px Arial`;\r\n    ctx.textAlign = data.alignment;\r\n\r\n    const lines = breakTextIntoLines(text, data.max_characters_per_line);\r\n    let offsetY = data.position.y;\r\n    lines.forEach((line) => {\r\n      ctx.fillText(line, data.position.x, offsetY);\r\n      offsetY += data.font_size + 5;\r\n    });\r\n  };\r\n\r\n  const drawCTA = (ctx, text, data) => {\r\n    const wrapText = (text, wrapLength) => {\r\n      const words = text.split(' ');\r\n      const lines = [];\r\n      let currentLine = '';\r\n\r\n      words.forEach(word => {\r\n        const testLine = currentLine + word + ' ';\r\n        const testWidth = ctx.measureText(testLine).width;\r\n        if (testWidth > wrapLength && currentLine !== '') {\r\n          lines.push(currentLine);\r\n          currentLine = word + ' ';\r\n        } else {\r\n          currentLine = testLine;\r\n        }\r\n      });\r\n\r\n      lines.push(currentLine);\r\n      return lines;\r\n    };\r\n\r\n    const ctaX = data.position.x;\r\n    const ctaY = data.position.y;\r\n    const ctaWidth = data.width || 200;\r\n    const ctaHeight = data.height || 80;\r\n    const cornerRadius = data.cornerRadius || 10;\r\n    const textColor = data.text_color || 'white';\r\n    const bgColor = data.backgroundColor || 'black';\r\n    const padding = data.padding || 16;\r\n    const wrapLength = data.wrapLength || 20;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(ctaX + cornerRadius, ctaY);\r\n    ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\r\n    ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\r\n    ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\r\n    ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\r\n    ctx.closePath();\r\n\r\n    ctx.fillStyle = bgColor;\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = textColor;\r\n    ctx.font = `${data.font_size || 30}px Arial`;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    const wrappedText = wrapText(text, wrapLength);\r\n    const lineHeight = ctx.measureText('M').width;\r\n\r\n    const textY = ctaY + ctaHeight / 2 - (lineHeight * wrappedText.length) / 2;\r\n\r\n    wrappedText.forEach((line, index) => {\r\n      ctx.fillText(line, ctaX + ctaWidth / 2, textY + index * lineHeight + padding / 2);\r\n    });\r\n  };\r\n\r\n  function getRandomColors() {\r\n    const colors = [];\r\n    for (let i = 0; i < MAX_PICKED_COLORS; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  const breakTextIntoLines = (text, maxCharactersPerLine) => {\r\n    const lines = [];\r\n    let currentLine = '';\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n      currentLine += text[i];\r\n      if (currentLine.length === maxCharactersPerLine || i === text.length - 1) {\r\n        lines.push(currentLine);\r\n        currentLine = '';\r\n      }\r\n    }\r\n    return lines;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1080}\r\n          height={1080}\r\n          className=\"border border-gray-400\"\r\n          style={{ width: '400px', height: '400px' }}\r\n        />\r\n      <div className=\"options-container\">\r\n        <div className=\"container\">\r\n          <div className=\"upload-box\">\r\n            <h2>Insert your image</h2>\r\n            <input \r\n              type=\"file\" \r\n              id=\"file-upload\" \r\n              accept=\"image/*\" \r\n              onChange={handleMaskImageUpload} \r\n            />\r\n            <label htmlFor=\"file-upload\">Choose file</label>\r\n            <p id=\"file-name\">{fileName}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 flex flex-col items-center\" style={{display:'flex',justifyContent:'center',alignItems:'row'}}>\r\n          <input\r\n            type=\"text\"\r\n            value={caption}\r\n            onChange={handleCaptionChange}\r\n            style={{width:\"100%\"}}\r\n            placeholder=\"Enter Caption\"\r\n            className=\"border border-gray-400 p-2 mb-2\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={callToAction}\r\n            onChange={handleCallToActionChange}\r\n            style={{width:\"100%\"}}\r\n            placeholder=\"Enter CTA Text\"\r\n            className=\"border border-gray-400 p-2 mb-2\"\r\n          />\r\n          <div className=\"color-picker\">\r\n            <div className=\"color-list\">\r\n              {/* Display last five picked colors */}\r\n              {pickedColors.slice(0, 5).map((color, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"color-box\"\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => setBackgroundColor(color)}\r\n                />\r\n              ))}\r\n              {/* Button with + icon */}\r\n              <button className=\"color-picker-btn\" onClick={handleColorPickerToggle}>\r\n                +\r\n              </button>\r\n            </div>\r\n            {showColorPicker && (\r\n              <ChromePicker color={backgroundColor} onChange={handleBackgroundColorChange} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}