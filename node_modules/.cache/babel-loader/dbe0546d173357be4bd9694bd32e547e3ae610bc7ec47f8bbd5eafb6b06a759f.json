{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\OneDrive\\\\Desktop\\\\college\\\\web devlopment\\\\Zepto Prject\\\\my-ap\\\\src\\\\CanvasEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  templateData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [caption, setCaption] = useState(templateData.caption.text);\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\n  const [backgroundColor, setBackgroundColor] = useState(templateData.cta.background_color);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const drawCanvas = () => {\n      const image = new Image();\n      image.src = templateData.urls.mask;\n      image.onload = () => {\n        // Draw the mask image\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n        // Set the global composite operation to 'source-in' to clip subsequent drawings to the mask area\n        ctx.globalCompositeOperation = 'source-in';\n\n        // Draw the user-selected image clipped to the mask area\n        const userImage = new Image();\n        userImage.src = 'C:\\Users\\vaibh\\OneDrive\\Desktop\\college\\web devlopment\\Zepto Prject\\my-ap\\src\\Coffee.jpg'; // Replace 'path_to_user_selected_image.jpg' with the actual path to the user-selected image\n        userImage.onload = () => {\n          ctx.drawImage(userImage, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n        };\n\n        // Reset the global composite operation to its default value\n        ctx.globalCompositeOperation = 'source-over';\n\n        // Draw caption\n        ctx.fillStyle = templateData.caption.text_color;\n        ctx.font = `${templateData.caption.font_size}px Arial`;\n        ctx.textAlign = templateData.caption.alignment;\n        const lines = getLines(ctx, caption, templateData.caption.max_characters_per_line);\n        lines.forEach((line, index) => {\n          ctx.fillText(line, templateData.caption.position.x, templateData.caption.position.y + index * (templateData.caption.font_size + 5));\n        });\n\n        // Draw call to action\n        ctx.fillStyle = templateData.cta.text_color;\n        ctx.fillRect(templateData.cta.position.x, templateData.cta.position.y, 100, 40);\n        ctx.fillStyle = templateData.cta.background_color;\n        ctx.fillText(callToAction, templateData.cta.position.x + 10, templateData.cta.position.y + 30);\n      };\n    };\n    drawCanvas();\n  }, [caption, callToAction, backgroundColor, templateData]);\n  const handleCaptionChange = event => {\n    setCaption(event.target.value);\n  };\n  const handleCallToActionChange = event => {\n    setCallToAction(event.target.value);\n  };\n  const handleBackgroundColorChange = event => {\n    setBackgroundColor(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1024,\n      height: 768,\n      className: \"border border-gray-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: caption,\n        onChange: handleCaptionChange,\n        className: \"border border-gray-400 p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: callToAction,\n        onChange: handleCallToActionChange,\n        className: \"border border-gray-400 p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: backgroundColor,\n        onChange: handleBackgroundColorChange,\n        className: \"border border-gray-400 p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"MIKp6CxpQEeZKJV3CMWIfy0ur6g=\");\n_c = CanvasEditor;\nconst getLines = (ctx, text, maxWidth) => {\n  const words = text.split(' ');\n  const lines = [];\n  let currentLine = words[0];\n  for (let i = 1; i < words.length; i++) {\n    const word = words[i];\n    const width = ctx.measureText(`${currentLine} ${word}`).width;\n    if (width < maxWidth) {\n      currentLine += ` ${word}`;\n    } else {\n      lines.push(currentLine);\n      currentLine = word;\n    }\n  }\n  lines.push(currentLine);\n  return lines;\n};\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","CanvasEditor","templateData","_s","canvasRef","caption","setCaption","text","callToAction","setCallToAction","cta","backgroundColor","setBackgroundColor","background_color","canvas","current","ctx","getContext","drawCanvas","image","Image","src","urls","mask","onload","drawImage","width","height","globalCompositeOperation","userImage","image_mask","x","y","fillStyle","text_color","font","font_size","textAlign","alignment","lines","getLines","max_characters_per_line","forEach","line","index","fillText","position","fillRect","handleCaptionChange","event","target","value","handleCallToActionChange","handleBackgroundColorChange","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","maxWidth","words","split","currentLine","i","length","word","measureText","push","$RefreshReg$"],"sources":["C:/Users/vaibh/OneDrive/Desktop/college/web devlopment/Zepto Prject/my-ap/src/CanvasEditor.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport \"./styles.css\";\r\n\r\nconst CanvasEditor = ({ templateData }) => {\r\n  const canvasRef = useRef(null);\r\n  const [caption, setCaption] = useState(templateData.caption.text);\r\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\r\n  const [backgroundColor, setBackgroundColor] = useState(templateData.cta.background_color);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const drawCanvas = () => {\r\n      const image = new Image();\r\n      image.src = templateData.urls.mask;\r\n      image.onload = () => {\r\n        // Draw the mask image\r\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n\r\n        // Set the global composite operation to 'source-in' to clip subsequent drawings to the mask area\r\n        ctx.globalCompositeOperation = 'source-in';\r\n\r\n        // Draw the user-selected image clipped to the mask area\r\n        const userImage = new Image();\r\n        userImage.src = 'C:\\Users\\vaibh\\OneDrive\\Desktop\\college\\web devlopment\\Zepto Prject\\my-ap\\src\\Coffee.jpg'; // Replace 'path_to_user_selected_image.jpg' with the actual path to the user-selected image\r\n        userImage.onload = () => {\r\n          ctx.drawImage(userImage, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n        };\r\n\r\n        // Reset the global composite operation to its default value\r\n        ctx.globalCompositeOperation = 'source-over';\r\n\r\n        // Draw caption\r\n        ctx.fillStyle = templateData.caption.text_color;\r\n        ctx.font = `${templateData.caption.font_size}px Arial`;\r\n        ctx.textAlign = templateData.caption.alignment;\r\n        const lines = getLines(ctx, caption, templateData.caption.max_characters_per_line);\r\n        lines.forEach((line, index) => {\r\n          ctx.fillText(line, templateData.caption.position.x, templateData.caption.position.y + index * (templateData.caption.font_size + 5));\r\n        });\r\n\r\n        // Draw call to action\r\n        ctx.fillStyle = templateData.cta.text_color;\r\n        ctx.fillRect(templateData.cta.position.x, templateData.cta.position.y, 100, 40);\r\n        ctx.fillStyle = templateData.cta.background_color;\r\n        ctx.fillText(callToAction, templateData.cta.position.x + 10, templateData.cta.position.y + 30);\r\n      };\r\n    };\r\n\r\n    drawCanvas();\r\n  }, [caption, callToAction, backgroundColor, templateData]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleCallToActionChange = (event) => {\r\n    setCallToAction(event.target.value);\r\n  };\r\n\r\n  const handleBackgroundColorChange = (event) => {\r\n    setBackgroundColor(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={1024}\r\n        height={768}\r\n        className=\"border border-gray-400\"\r\n      />\r\n      <div className=\"mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={caption}\r\n          onChange={handleCaptionChange}\r\n          className=\"border border-gray-400 p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={callToAction}\r\n          onChange={handleCallToActionChange}\r\n          className=\"border border-gray-400 p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"color\"\r\n          value={backgroundColor}\r\n          onChange={handleBackgroundColorChange}\r\n          className=\"border border-gray-400 p-2\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getLines = (ctx, text, maxWidth) => {\r\n  const words = text.split(' ');\r\n  const lines = [];\r\n  let currentLine = words[0];\r\n\r\n  for (let i = 1; i < words.length; i++) {\r\n    const word = words[i];\r\n    const width = ctx.measureText(`${currentLine} ${word}`).width;\r\n    if (width < maxWidth) {\r\n      currentLine += ` ${word}`;\r\n    } else {\r\n      lines.push(currentLine);\r\n      currentLine = word;\r\n    }\r\n  }\r\n  lines.push(currentLine);\r\n  return lines;\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}