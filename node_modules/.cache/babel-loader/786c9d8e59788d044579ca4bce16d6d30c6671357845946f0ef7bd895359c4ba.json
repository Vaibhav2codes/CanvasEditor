{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\OneDrive\\\\Desktop\\\\college\\\\web devlopment\\\\Zepto Prject\\\\my-ap\\\\src\\\\CanvasEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  templateData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [caption, setCaption] = useState(templateData.caption.text);\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw background color\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Load design pattern\n    const designPattern = new Image();\n    designPattern.src = templateData.urls.design_pattern;\n    designPattern.onload = () => {\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\n\n      // Apply mask\n      const mask = new Image();\n      mask.src = addRandomQueryParam(templateData.urls.mask);\n      mask.onload = () => {\n        ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n\n        // Apply mask stroke\n        // const maskStroke = new Image();\n        // maskStroke.src = (templateData.urls.stroke);\n        // maskStroke.onload = () => {\n        //   ctx.drawImage(maskStroke, templateData.image_mask.x+1, templateData.image_mask.y+1, templateData.image_mask.width, templateData.image_mask.height);\n        ctx.save(); // Save the current state of the context\n        ctx.strokeStyle = 'white'; // Set stroke color to white\n        ctx.lineWidth = 10; // Set stroke width (adjust as needed)\n        ctx.strokeRect(templateData.image_mask.x - 5, templateData.image_mask.y - 5, templateData.image_mask.width + 10, templateData.image_mask.height + 10); // Draw a stroke rectangle around the mask\n        ctx.restore();\n\n        // Draw caption\n        drawText(ctx, caption, templateData.caption);\n\n        // Draw call to action\n        drawCTA(ctx, callToAction, templateData.cta);\n      };\n    };\n    // };\n  }, [backgroundColor, caption, callToAction, templateData]);\n  const handleCaptionChange = event => {\n    setCaption(event.target.value);\n  };\n  const handleCallToActionChange = event => {\n    setCallToAction(event.target.value);\n  };\n  const handleBackgroundColorChange = color => {\n    setBackgroundColor(color.hex);\n    console.log(backgroundColor);\n  };\n  const addRandomQueryParam = url => {\n    const randomQueryParam = Math.floor(Math.random() * 100000); // Generate a random number\n    return `${url}?random=${randomQueryParam}`;\n  };\n\n  // Function to draw text with line breaks\n  const drawText = (ctx, text, data) => {\n    ctx.fillStyle = data.text_color;\n    ctx.font = `${data.font_size}px Arial`;\n    ctx.textAlign = data.alignment;\n    const lines = breakTextIntoLines(text, data.max_characters_per_line); // Break text into lines with max characters per line specified in data\n    let offsetY = data.position.y;\n    lines.forEach(line => {\n      ctx.fillText(line, data.position.x, offsetY);\n      offsetY += data.font_size + 5; // Adjust for line spacing\n    });\n  };\n  const drawCTA = (ctx, text, data) => {\n    const ctaX = data.position.x;\n    const ctaY = data.position.y;\n    const ctaWidth = data.width || 150; // Default width for the CTA button\n    const ctaHeight = data.height || 50; // Default height for the CTA button\n    const cornerRadius = data.cornerRadius || 10; // Default corner radius for rounded corners\n    const textColor = data.text_color || 'black'; // Default text color\n    const bgColor = data.background_color || 'white'; // Default background color\n\n    // Draw rounded rectangle background for CTA button\n    ctx.beginPath();\n    ctx.moveTo(ctaX + cornerRadius, ctaY);\n    ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\n    ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\n    ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\n    ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\n    ctx.closePath();\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n\n    // Draw text on the CTA button\n    ctx.fillStyle = textColor;\n    ctx.font = `${data.font_size || 16}px Arial`; // Default font size for the text\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(text, ctaX + ctaWidth / 2, ctaY + ctaHeight / 2);\n  };\n  const breakTextIntoLines = (text, maxCharactersPerLine) => {\n    const lines = [];\n    let currentLine = '';\n    for (let i = 0; i < text.length; i++) {\n      currentLine += text[i];\n      if (currentLine.length === maxCharactersPerLine || i === text.length - 1) {\n        lines.push(currentLine);\n        currentLine = '';\n      }\n    }\n    return lines;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1080,\n      height: 1080,\n      className: \"border border-gray-400\",\n      style: {\n        width: '400px',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: caption,\n        onChange: handleCaptionChange,\n        placeholder: \"Enter Caption\",\n        className: \"border border-gray-400 p-2 mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: callToAction,\n        onChange: handleCallToActionChange,\n        placeholder: \"Enter CTA Text\",\n        className: \"border border-gray-400 p-2 mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: backgroundColor,\n          onChange: handleBackgroundColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"F6zCx3h0CAGSwfupFffpNVan+z0=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ChromePicker","jsxDEV","_jsxDEV","CanvasEditor","templateData","_s","canvasRef","caption","setCaption","text","callToAction","setCallToAction","cta","backgroundColor","setBackgroundColor","canvas","current","ctx","getContext","clearRect","width","height","fillStyle","fillRect","designPattern","Image","src","urls","design_pattern","onload","drawImage","mask","addRandomQueryParam","image_mask","x","y","save","strokeStyle","lineWidth","strokeRect","restore","drawText","drawCTA","handleCaptionChange","event","target","value","handleCallToActionChange","handleBackgroundColorChange","color","hex","console","log","url","randomQueryParam","Math","floor","random","data","text_color","font","font_size","textAlign","alignment","lines","breakTextIntoLines","max_characters_per_line","offsetY","position","forEach","line","fillText","ctaX","ctaY","ctaWidth","ctaHeight","cornerRadius","textColor","bgColor","background_color","beginPath","moveTo","arcTo","closePath","fill","textBaseline","maxCharactersPerLine","currentLine","i","length","push","className","children","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/OneDrive/Desktop/college/web devlopment/Zepto Prject/my-ap/src/CanvasEditor.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport './styles.css'\r\n\r\nconst CanvasEditor = ({ templateData }) => {\r\n  const canvasRef = useRef(null);\r\n  const [caption, setCaption] = useState(templateData.caption.text);\r\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\r\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw background color\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Load design pattern\r\n    const designPattern = new Image();\r\n    designPattern.src = (templateData.urls.design_pattern);\r\n    designPattern.onload = () => {\r\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Apply mask\r\n      const mask = new Image();\r\n      mask.src = addRandomQueryParam(templateData.urls.mask);\r\n      mask.onload = () => {\r\n        ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n\r\n        // Apply mask stroke\r\n        // const maskStroke = new Image();\r\n        // maskStroke.src = (templateData.urls.stroke);\r\n        // maskStroke.onload = () => {\r\n        //   ctx.drawImage(maskStroke, templateData.image_mask.x+1, templateData.image_mask.y+1, templateData.image_mask.width, templateData.image_mask.height);\r\n        ctx.save(); // Save the current state of the context\r\n        ctx.strokeStyle = 'white'; // Set stroke color to white\r\n        ctx.lineWidth = 10; // Set stroke width (adjust as needed)\r\n        ctx.strokeRect(templateData.image_mask.x - 5, templateData.image_mask.y - 5, templateData.image_mask.width + 10, templateData.image_mask.height + 10); // Draw a stroke rectangle around the mask\r\n        ctx.restore();\r\n\r\n          // Draw caption\r\n          drawText(ctx, caption, templateData.caption);\r\n\r\n          // Draw call to action\r\n          drawCTA(ctx, callToAction, templateData.cta);\r\n        };\r\n      };\r\n    // };\r\n  }, [backgroundColor,caption,callToAction,templateData]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleCallToActionChange = (event) => {\r\n    setCallToAction(event.target.value);\r\n  };\r\n\r\n  const handleBackgroundColorChange = (color) => {\r\n    \r\n    setBackgroundColor(color.hex);\r\n    console.log(backgroundColor)\r\n  };\r\n\r\n  const addRandomQueryParam = (url) => {\r\n    const randomQueryParam = Math.floor(Math.random() * 100000); // Generate a random number\r\n    return `${url}?random=${randomQueryParam}`;\r\n  };\r\n\r\n  // Function to draw text with line breaks\r\nconst drawText = (ctx, text, data) => {\r\n  ctx.fillStyle = data.text_color;\r\n  ctx.font = `${data.font_size}px Arial`;\r\n  ctx.textAlign = data.alignment;\r\n\r\n  const lines = breakTextIntoLines(text, data.max_characters_per_line); // Break text into lines with max characters per line specified in data\r\n  let offsetY = data.position.y;\r\n  lines.forEach((line) => {\r\n    ctx.fillText(line, data.position.x, offsetY);\r\n    offsetY += data.font_size + 5; // Adjust for line spacing\r\n  });\r\n};\r\n\r\nconst drawCTA = (ctx, text, data) => {\r\n  const ctaX = data.position.x;\r\n  const ctaY = data.position.y;\r\n  const ctaWidth = data.width || 150; // Default width for the CTA button\r\n  const ctaHeight = data.height || 50; // Default height for the CTA button\r\n  const cornerRadius = data.cornerRadius || 10; // Default corner radius for rounded corners\r\n  const textColor = data.text_color || 'black'; // Default text color\r\n  const bgColor = data.background_color || 'white'; // Default background color\r\n\r\n  // Draw rounded rectangle background for CTA button\r\n  ctx.beginPath();\r\n  ctx.moveTo(ctaX + cornerRadius, ctaY);\r\n  ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\r\n  ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\r\n  ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\r\n  ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\r\n  ctx.closePath();\r\n  \r\n  ctx.fillStyle = bgColor;\r\n  ctx.fill();\r\n\r\n  // Draw text on the CTA button\r\n  ctx.fillStyle = textColor;\r\n  ctx.font = `${data.font_size || 16}px Arial`; // Default font size for the text\r\n  ctx.textAlign = 'center';\r\n  ctx.textBaseline = 'middle';\r\n  ctx.fillText(text, ctaX + ctaWidth / 2, ctaY + ctaHeight / 2);\r\n};\r\n\r\n  const breakTextIntoLines = (text, maxCharactersPerLine) => {\r\n    const lines = [];\r\n    let currentLine = '';\r\n  \r\n    for (let i = 0; i < text.length; i++) {\r\n      currentLine += text[i];\r\n      if (currentLine.length === maxCharactersPerLine || i === text.length - 1) {\r\n        lines.push(currentLine);\r\n        currentLine = '';\r\n      }\r\n    }\r\n    return lines;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={1080}\r\n        height={1080}\r\n        className=\"border border-gray-400\"\r\n        style={{ width: '400px', height: '400px' }}\r\n      />\r\n      <div className=\"mt-4 flex flex-col items-center\">\r\n        <input\r\n          type=\"text\"\r\n          value={caption}\r\n          onChange={handleCaptionChange}\r\n          placeholder=\"Enter Caption\"\r\n          className=\"border border-gray-400 p-2 mb-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={callToAction}\r\n          onChange={handleCallToActionChange}\r\n          placeholder=\"Enter CTA Text\"\r\n          className=\"border border-gray-400 p-2 mb-2\"\r\n        />\r\n        <div className=\"color-picker\">\r\n          <ChromePicker color={backgroundColor} onChange={handleBackgroundColorChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}