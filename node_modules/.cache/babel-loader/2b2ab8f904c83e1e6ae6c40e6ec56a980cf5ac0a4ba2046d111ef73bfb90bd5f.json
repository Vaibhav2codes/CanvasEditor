{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\OneDrive\\\\Desktop\\\\college\\\\web devlopment\\\\Zepto Prject\\\\my-ap\\\\src\\\\CanvasEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  templateData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [caption, setCaption] = useState(templateData.caption.text);\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Draw background color\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Load design pattern\n    const designPattern = new Image();\n    designPattern.onload = () => {\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\n\n      // Apply mask\n      const mask = new Image();\n      mask.src = addRandomQueryParam(templateData.urls.coffeeimg);\n      mask.onload = () => {\n        const scaleFactorX = canvas.width / templateData.image_mask.width;\n        const scaleFactorY = canvas.height / templateData.image_mask.height;\n\n        // Use the smaller scale factor to ensure the image fits within the canvas\n        const scaleFactor = Math.min(scaleFactorX, scaleFactorY);\n\n        // Calculate the scaled width and height of the mask\n        const scaledWidth = templateData.image_mask.width * scaleFactor;\n        const scaledHeight = templateData.image_mask.height * scaleFactor;\n\n        // Calculate the position to center the mask horizontally and vertically\n        const maskX = (canvas.width - scaledWidth) / 2;\n        const maskY = (canvas.height - scaledHeight) / 2;\n        ctx.globalCompositeOperation = 'source-atop';\n        ctx.drawImage(mask, maskX, maskY, scaledWidth, scaledHeight);\n\n        // Load mask stroke\n        const maskStroke = new Image();\n        maskStroke.src = addRandomQueryParam(templateData.urls.stroke);\n        maskStroke.onload = () => {\n          ctx.drawImage(maskStroke, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n\n          // Draw caption\n          ctx.fillStyle = templateData.caption.text_color;\n          ctx.font = `${templateData.caption.font_size}px Arial`;\n          ctx.textAlign = templateData.caption.alignment;\n          const lines = getLines(ctx, caption, templateData.caption.max_characters_per_line);\n          lines.forEach((line, index) => {\n            ctx.fillText(line, templateData.caption.position.x, templateData.caption.position.y + index * (templateData.caption.font_size + 5));\n          });\n\n          // Draw call to action\n          const ctaFontSize = templateData.cta.font_size || 30; // Default font size if not provided\n          ctx.fillStyle = templateData.cta.text_color;\n          ctx.fillRect(templateData.cta.position.x, templateData.cta.position.y, 100, 40);\n          ctx.fillStyle = templateData.cta.background_color;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.font = `${ctaFontSize}px Arial`;\n          const ctaX = templateData.cta.position.x + 50; // Center of the rectangle\n          const ctaY = templateData.cta.position.y + 20; // Middle of the rectangle\n          ctx.fillText(callToAction, ctaX, ctaY);\n        };\n      };\n    };\n    designPattern.src = addRandomQueryParam(templateData.urls.design_pattern);\n  }, [caption, callToAction, backgroundColor, templateData]);\n  const handleCaptionChange = event => {\n    setCaption(event.target.value);\n  };\n  const handleCallToActionChange = event => {\n    setCallToAction(event.target.value);\n  };\n  const handleBackgroundColorChange = color => {\n    setBackgroundColor(color.hex);\n  };\n  const addRandomQueryParam = url => {\n    const randomQueryParam = Math.floor(Math.random() * 100000); // Generate a random number\n    return `${url}?random=${randomQueryParam}`;\n  };\n  const getLines = (ctx, text, maxWidth) => {\n    const words = text.split(' ');\n    const lines = [];\n    let currentLine = words[0];\n    for (let i = 1; i < words.length; i++) {\n      const word = words[i];\n      const width = ctx.measureText(`${currentLine} ${word}`).width;\n      if (width < maxWidth) {\n        currentLine += ` ${word}`;\n      } else {\n        lines.push(currentLine);\n        currentLine = word;\n      }\n    }\n    lines.push(currentLine);\n    return lines;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1024,\n      height: 768,\n      className: \"border border-gray-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: caption,\n        onChange: handleCaptionChange,\n        className: \"border border-gray-400 p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: callToAction,\n        onChange: handleCallToActionChange,\n        className: \"border border-gray-400 p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker\",\n        children: /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: backgroundColor,\n          onChangeComplete: handleBackgroundColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"F6zCx3h0CAGSwfupFffpNVan+z0=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ChromePicker","jsxDEV","_jsxDEV","CanvasEditor","templateData","_s","canvasRef","caption","setCaption","text","callToAction","setCallToAction","cta","backgroundColor","setBackgroundColor","canvas","current","ctx","getContext","fillStyle","fillRect","width","height","designPattern","Image","onload","drawImage","mask","src","addRandomQueryParam","urls","coffeeimg","scaleFactorX","image_mask","scaleFactorY","scaleFactor","Math","min","scaledWidth","scaledHeight","maskX","maskY","globalCompositeOperation","maskStroke","stroke","x","y","text_color","font","font_size","textAlign","alignment","lines","getLines","max_characters_per_line","forEach","line","index","fillText","position","ctaFontSize","background_color","textBaseline","ctaX","ctaY","design_pattern","handleCaptionChange","event","target","value","handleCallToActionChange","handleBackgroundColorChange","color","hex","url","randomQueryParam","floor","random","maxWidth","words","split","currentLine","i","length","word","measureText","push","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onChangeComplete","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/OneDrive/Desktop/college/web devlopment/Zepto Prject/my-ap/src/CanvasEditor.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport {ChromePicker} from 'react-color';\r\nimport './styles.css';\r\n\r\nconst CanvasEditor = ({ templateData }) => {\r\n  const canvasRef = useRef(null);\r\n  const [caption, setCaption] = useState(templateData.caption.text);\r\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\r\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Draw background color\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Load design pattern\r\n    const designPattern = new Image();\r\n    designPattern.onload = () => {\r\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Apply mask\r\n      const mask = new Image();\r\n      mask.src = addRandomQueryParam(templateData.urls.coffeeimg);\r\n      mask.onload = () => {\r\n        const scaleFactorX = canvas.width / templateData.image_mask.width;\r\n        const scaleFactorY = canvas.height / templateData.image_mask.height;\r\n\r\n        // Use the smaller scale factor to ensure the image fits within the canvas\r\n        const scaleFactor = Math.min(scaleFactorX, scaleFactorY);\r\n\r\n        // Calculate the scaled width and height of the mask\r\n        const scaledWidth = templateData.image_mask.width * scaleFactor;\r\n        const scaledHeight = templateData.image_mask.height * scaleFactor;\r\n\r\n        // Calculate the position to center the mask horizontally and vertically\r\n        const maskX = (canvas.width - scaledWidth) / 2;\r\n        const maskY = (canvas.height - scaledHeight) / 2;\r\n        \r\n        ctx.globalCompositeOperation = 'source-atop';\r\n        ctx.drawImage(mask, maskX, maskY, scaledWidth, scaledHeight);\r\n\r\n        // Load mask stroke\r\n        const maskStroke = new Image();\r\n        maskStroke.src = addRandomQueryParam(templateData.urls.stroke);\r\n        maskStroke.onload = () => {\r\n          ctx.drawImage(maskStroke, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n\r\n          // Draw caption\r\n          ctx.fillStyle = templateData.caption.text_color;\r\n          ctx.font = `${templateData.caption.font_size}px Arial`;\r\n          ctx.textAlign = templateData.caption.alignment;\r\n          const lines = getLines(ctx, caption, templateData.caption.max_characters_per_line);\r\n          lines.forEach((line, index) => {\r\n            ctx.fillText(line, templateData.caption.position.x, templateData.caption.position.y + index * (templateData.caption.font_size + 5));\r\n          });\r\n\r\n          // Draw call to action\r\n          const ctaFontSize = templateData.cta.font_size || 30; // Default font size if not provided\r\n          ctx.fillStyle = templateData.cta.text_color;\r\n          ctx.fillRect(templateData.cta.position.x, templateData.cta.position.y, 100, 40);\r\n          ctx.fillStyle = templateData.cta.background_color;\r\n          ctx.textAlign = 'center';\r\n          ctx.textBaseline = 'middle';\r\n          ctx.font = `${ctaFontSize}px Arial`;\r\n          const ctaX = templateData.cta.position.x + 50; // Center of the rectangle\r\n          const ctaY = templateData.cta.position.y + 20; // Middle of the rectangle\r\n          ctx.fillText(callToAction, ctaX, ctaY);\r\n        };\r\n      };\r\n    };\r\n\r\n    designPattern.src = addRandomQueryParam(templateData.urls.design_pattern);\r\n  }, [caption, callToAction, backgroundColor, templateData]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleCallToActionChange = (event) => {\r\n    setCallToAction(event.target.value);\r\n  };\r\n\r\n  const handleBackgroundColorChange = (color) => {\r\n    setBackgroundColor(color.hex);\r\n  };\r\n\r\n  const addRandomQueryParam = (url) => {\r\n    const randomQueryParam = Math.floor(Math.random() * 100000); // Generate a random number\r\n    return `${url}?random=${randomQueryParam}`;\r\n  };\r\n\r\n  const getLines = (ctx, text, maxWidth) => {\r\n    const words = text.split(' ');\r\n    const lines = [];\r\n    let currentLine = words[0];\r\n\r\n    for (let i = 1; i < words.length; i++) {\r\n      const word = words[i];\r\n      const width = ctx.measureText(`${currentLine} ${word}`).width;\r\n      if (width < maxWidth) {\r\n        currentLine += ` ${word}`;\r\n      } else {\r\n        lines.push(currentLine);\r\n        currentLine = word;\r\n      }\r\n    }\r\n    lines.push(currentLine);\r\n    return lines;\r\n  };\r\n\r\n  return (\r\n    <div className=\"canvas-container\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={1024}\r\n        height={768}\r\n        className=\"border border-gray-400\"\r\n      />\r\n      <div className=\"mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={caption}\r\n          onChange={handleCaptionChange}\r\n          className=\"border border-gray-400 p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={callToAction}\r\n          onChange={handleCallToActionChange}\r\n          className=\"border border-gray-400 p-2 mr-2\"\r\n        />\r\n        <div className=\"color-picker\">\r\n          <ChromePicker color={backgroundColor} onChangeComplete={handleBackgroundColorChange} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}