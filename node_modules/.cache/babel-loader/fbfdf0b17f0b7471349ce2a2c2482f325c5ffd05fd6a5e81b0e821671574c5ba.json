{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\OneDrive\\\\Desktop\\\\college\\\\web devlopment\\\\Zepto Prject\\\\my-ap\\\\src\\\\CanvasEditor.js\",\n  _s = $RefreshSig$();\n// CanvasEditor.js\nimport React, { useRef, useState, useEffect } from 'react';\nimport './CanvasEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  templateData\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [caption, setCaption] = useState(templateData.caption.text);\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\n  const [backgroundColor, setBackgroundColor] = useState(templateData.cta.background_color);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const image = new Image();\n    image.onload = () => {\n      // Draw background image\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n      // Apply mask\n      const mask = new Image();\n      mask.src = templateData.urls.mask;\n      mask.onload = () => {\n        ctx.globalCompositeOperation = 'source-atop';\n        ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n      };\n\n      // Draw caption\n      ctx.fillStyle = templateData.caption.text_color;\n      ctx.font = `${templateData.caption.font_size}px Arial`;\n      ctx.textAlign = templateData.caption.alignment;\n      const lines = getLines(ctx, caption, templateData.caption.max_characters_per_line);\n      lines.forEach((line, index) => {\n        ctx.fillText(line, templateData.caption.position.x, templateData.caption.position.y + index * (templateData.caption.font_size + 5));\n      });\n\n      // Draw call to action\n      ctx.fillStyle = templateData.cta.text_color;\n      ctx.fillRect(templateData.cta.position.x, templateData.cta.position.y, 100, 40);\n      ctx.fillStyle = templateData.cta.background_color;\n      ctx.fillText(callToAction, templateData.cta.position.x + 10, templateData.cta.position.y + 30);\n    };\n    image.src = templateData.urls.design_pattern;\n  }, [caption, callToAction, backgroundColor, templateData]);\n  const handleCaptionChange = event => {\n    setCaption(event.target.value);\n  };\n  const handleCallToActionChange = event => {\n    setCallToAction(event.target.value);\n  };\n  const handleBackgroundColorChange = event => {\n    setBackgroundColor(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 1024,\n      height: 768,\n      className: \"border border-gray-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: caption,\n        onChange: handleCaptionChange,\n        className: \"border border-gray-400 p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: callToAction,\n        onChange: handleCallToActionChange,\n        className: \"border border-gray-400 p-2 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: backgroundColor,\n        onChange: handleBackgroundColorChange,\n        className: \"border border-gray-400 p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasEditor, \"MIKp6CxpQEeZKJV3CMWIfy0ur6g=\");\n_c = CanvasEditor;\nconst getLines = (ctx, text, maxWidth) => {\n  const words = text.split(' ');\n  const lines = [];\n  let currentLine = words[0];\n  for (let i = 1; i < words.length; i++) {\n    const word = words[i];\n    const width = ctx.measureText(`${currentLine} ${word}`).width;\n    if (width < maxWidth) {\n      currentLine += ` ${word}`;\n    } else {\n      lines.push(currentLine);\n      currentLine = word;\n    }\n  }\n  lines.push(currentLine);\n  return lines;\n};\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","CanvasEditor","templateData","_s","canvasRef","caption","setCaption","text","callToAction","setCallToAction","cta","backgroundColor","setBackgroundColor","background_color","canvas","current","ctx","getContext","image","Image","onload","drawImage","width","height","mask","src","urls","globalCompositeOperation","image_mask","x","y","fillStyle","text_color","font","font_size","textAlign","alignment","lines","getLines","max_characters_per_line","forEach","line","index","fillText","position","fillRect","design_pattern","handleCaptionChange","event","target","value","handleCallToActionChange","handleBackgroundColorChange","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","maxWidth","words","split","currentLine","i","length","word","measureText","push","$RefreshReg$"],"sources":["C:/Users/vaibh/OneDrive/Desktop/college/web devlopment/Zepto Prject/my-ap/src/CanvasEditor.js"],"sourcesContent":["// CanvasEditor.js\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport './CanvasEditor.css';\r\n\r\nconst CanvasEditor = ({ templateData }) => {\r\n  const canvasRef = useRef(null);\r\n  const [caption, setCaption] = useState(templateData.caption.text);\r\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\r\n  const [backgroundColor, setBackgroundColor] = useState(templateData.cta.background_color);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    const image = new Image();\r\n    image.onload = () => {\r\n      // Draw background image\r\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Apply mask\r\n      const mask = new Image();\r\n      mask.src = templateData.urls.mask;\r\n      mask.onload = () => {\r\n        ctx.globalCompositeOperation = 'source-atop';\r\n        ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n      };\r\n\r\n      // Draw caption\r\n      ctx.fillStyle = templateData.caption.text_color;\r\n      ctx.font = `${templateData.caption.font_size}px Arial`;\r\n      ctx.textAlign = templateData.caption.alignment;\r\n      const lines = getLines(ctx, caption, templateData.caption.max_characters_per_line);\r\n      lines.forEach((line, index) => {\r\n        ctx.fillText(line, templateData.caption.position.x, templateData.caption.position.y + index * (templateData.caption.font_size + 5));\r\n      });\r\n\r\n      // Draw call to action\r\n      ctx.fillStyle = templateData.cta.text_color;\r\n      ctx.fillRect(templateData.cta.position.x, templateData.cta.position.y, 100, 40);\r\n      ctx.fillStyle = templateData.cta.background_color;\r\n      ctx.fillText(callToAction, templateData.cta.position.x + 10, templateData.cta.position.y + 30);\r\n    };\r\n\r\n    image.src = templateData.urls.design_pattern;\r\n  }, [caption, callToAction, backgroundColor, templateData]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleCallToActionChange = (event) => {\r\n    setCallToAction(event.target.value);\r\n  };\r\n\r\n  const handleBackgroundColorChange = (event) => {\r\n    setBackgroundColor(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={1024}\r\n        height={768}\r\n        className=\"border border-gray-400\"\r\n      />\r\n      <div className=\"mt-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={caption}\r\n          onChange={handleCaptionChange}\r\n          className=\"border border-gray-400 p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={callToAction}\r\n          onChange={handleCallToActionChange}\r\n          className=\"border border-gray-400 p-2 mr-2\"\r\n        />\r\n        <input\r\n          type=\"color\"\r\n          value={backgroundColor}\r\n          onChange={handleBackgroundColorChange}\r\n          className=\"border border-gray-400 p-2\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getLines = (ctx, text, maxWidth) => {\r\n  const words = text.split(' ');\r\n  const lines = [];\r\n  let currentLine = words[0];\r\n\r\n  for (let i = 1; i < words.length; i++) {\r\n    const word = words[i];\r\n    const width = ctx.measureText(`${currentLine} ${word}`).width;\r\n    if (width < maxWidth) {\r\n      currentLine += ` ${word}`;\r\n    } else {\r\n      lines.push(currentLine);\r\n      currentLine = word;\r\n    }\r\n  }\r\n  lines.push(currentLine);\r\n  return lines;\r\n};\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}