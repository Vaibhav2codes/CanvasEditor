{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\OneDrive\\\\Desktop\\\\college\\\\web devlopment\\\\Zepto Prject\\\\my-ap\\\\src\\\\CanvasEditor.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasEditor = ({\n  templateData\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const canvasRef = useRef(null);\n  const [caption, setCaption] = useState(templateData.caption.text);\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const MAX_PICKED_COLORS = 5;\n  const [pickedColors, setPickedColors] = useState(getRandomColors());\n  const [maskImage, setMaskImage] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  // const [fileName, setFileName] = useState('No file chosen');\n\n  const UploadBox = ({\n    handleMaskImageUpload\n  }) => {\n    _s();\n    const [fileName, setFileName] = useState('Select your file!');\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw background color\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Load design pattern\n      const designPattern = new Image();\n      designPattern.src = templateData.urls.design_pattern;\n      designPattern.onload = () => {\n        ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\n\n        // Apply mask\n        if (maskImage) {\n          ctx.drawImage(maskImage, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n        } else {\n          const mask = new Image();\n          mask.src = addRandomQueryParam(templateData.urls.mask);\n          mask.onload = () => {\n            ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\n          };\n        }\n\n        // Apply mask stroke\n        ctx.save();\n        ctx.strokeStyle = 'white';\n        ctx.lineWidth = 10;\n        ctx.strokeRect(templateData.image_mask.x - 5, templateData.image_mask.y - 5, templateData.image_mask.width + 10, templateData.image_mask.height + 10);\n        ctx.restore();\n\n        // Draw caption\n        drawText(ctx, caption, templateData.caption);\n\n        // Draw call to action\n        drawCTA(ctx, callToAction, templateData.cta);\n      };\n    }, [backgroundColor, caption, callToAction, maskImage, templateData]);\n    const handleCaptionChange = event => {\n      setCaption(event.target.value);\n    };\n    const handleCallToActionChange = event => {\n      setCallToAction(event.target.value);\n    };\n    const handleBackgroundColorChange = color => {\n      setBackgroundColor(color.hex);\n      let newColors = [color.hex, ...pickedColors];\n      if (newColors.length > 5) {\n        newColors.pop();\n      }\n      setPickedColors(newColors);\n    };\n    const handleColorPickerToggle = () => {\n      setShowColorPicker(!showColorPicker);\n    };\n\n    // const handleMaskImageUpload = (event) => {\n    //   const file = event.target.files[0];\n    //   setFileName(event.target.files[0].name);\n    //   if (file) {\n    //     const reader = new FileReader();\n    //     reader.onload = (e) => {\n    //       const image = new Image();\n    //       image.onload = () => {\n    //         setMaskImage(image);\n    //       };\n    //       image.src = e.target.result;\n    //     };\n    //     reader.readAsDataURL(file);\n    //     setImageFile(file);\n    //   }\n    // };\n    const handleFileChange = event => {\n      handleMaskImageUpload(event);\n      setFileName(event.target.value.replace(/.*(\\/|\\\\)/, ''));\n    };\n    const addRandomQueryParam = url => {\n      const randomQueryParam = Math.floor(Math.random() * 100000);\n      return `${url}?random=${randomQueryParam}`;\n    };\n    const drawText = (ctx, text, data) => {\n      ctx.fillStyle = data.text_color;\n      ctx.font = `${data.font_size}px Arial`;\n      ctx.textAlign = data.alignment;\n      const lines = breakTextIntoLines(text, data.max_characters_per_line);\n      let offsetY = data.position.y;\n      lines.forEach(line => {\n        ctx.fillText(line, data.position.x, offsetY);\n        offsetY += data.font_size + 5;\n      });\n    };\n    const drawCTA = (ctx, text, data) => {\n      const wrapText = (text, wrapLength) => {\n        const words = text.split(' ');\n        const lines = [];\n        let currentLine = '';\n        words.forEach(word => {\n          const testLine = currentLine + word + ' ';\n          const testWidth = ctx.measureText(testLine).width;\n          if (testWidth > wrapLength && currentLine !== '') {\n            lines.push(currentLine);\n            currentLine = word + ' ';\n          } else {\n            currentLine = testLine;\n          }\n        });\n        lines.push(currentLine);\n        return lines;\n      };\n      const ctaX = data.position.x;\n      const ctaY = data.position.y;\n      const ctaWidth = data.width || 200;\n      const ctaHeight = data.height || 80;\n      const cornerRadius = data.cornerRadius || 10;\n      const textColor = data.text_color || 'white';\n      const bgColor = data.backgroundColor || 'black';\n      const padding = data.padding || 16;\n      const wrapLength = data.wrapLength || 20;\n      ctx.beginPath();\n      ctx.moveTo(ctaX + cornerRadius, ctaY);\n      ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\n      ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\n      ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\n      ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\n      ctx.closePath();\n      ctx.fillStyle = bgColor;\n      ctx.fill();\n      ctx.fillStyle = textColor;\n      ctx.font = `${data.font_size || 30}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      const wrappedText = wrapText(text, wrapLength);\n      const lineHeight = ctx.measureText('M').width;\n      const textY = ctaY + ctaHeight / 2 - lineHeight * wrappedText.length / 2;\n      wrappedText.forEach((line, index) => {\n        ctx.fillText(line, ctaX + ctaWidth / 2, textY + index * lineHeight + padding / 2);\n      });\n    };\n    function getRandomColors() {\n      const colors = [];\n      for (let i = 0; i < MAX_PICKED_COLORS; i++) {\n        colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\n      }\n      return colors;\n    }\n    const breakTextIntoLines = (text, maxCharactersPerLine) => {\n      const lines = [];\n      let currentLine = '';\n      for (let i = 0; i < text.length; i++) {\n        currentLine += text[i];\n        if (currentLine.length === maxCharactersPerLine || i === text.length - 1) {\n          lines.push(currentLine);\n          currentLine = '';\n        }\n      }\n      return lines;\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 1080,\n        height: 1080,\n        className: \"border border-gray-400\",\n        style: {\n          width: '400px',\n          height: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"Ad Customization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-upload-wrapper\",\n              style: {\n                background: 'linear-gradient(to top right, #bf7a6b 0%, #e6d8a7 100%)'\n              },\n              \"data-text\": fileName,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"file-upload-field\",\n                type: \"file\",\n                className: \"file-upload-field\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex flex-col items-center\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Contents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textcont\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Ad Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: caption,\n              onChange: handleCaptionChange,\n              style: {\n                width: '100%',\n                padding: '10px',\n                marginBottom: '10px',\n                border: '1px solid #dddddd',\n                borderRadius: '5px',\n                transition: 'border 0.3s ease'\n              },\n              placeholder: \"Enter Caption\",\n              className: \"border border-gray-400 p-2 mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"captioncont\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: callToAction,\n              onChange: handleCallToActionChange,\n              style: {\n                width: '100%',\n                padding: '10px',\n                marginTop: '20px',\n                border: '1px solid #dddddd',\n                borderRadius: '5px',\n                transition: 'border 0.3s ease'\n              },\n              placeholder: \"Enter CTA Text\",\n              className: \"border border-gray-400 p-2 mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Choose your color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"color-list\",\n              children: [pickedColors.slice(0, 5).map((color, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"color-box\",\n                style: {\n                  backgroundColor: color\n                },\n                onClick: () => setBackgroundColor(color)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"color-picker-btn\",\n                onClick: handleColorPickerToggle,\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 13\n            }, this), showColorPicker && /*#__PURE__*/_jsxDEV(ChromePicker, {\n              color: backgroundColor,\n              onChange: handleBackgroundColorChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }, this);\n  };\n  _s(UploadBox, \"gEFx7rYHI33lcWXFtBf2K3WSqDQ=\");\n};\n_s2(CanvasEditor, \"0GM2z1MhubrkbsnFPI8pQkf4mN4=\");\n_c = CanvasEditor;\nexport default CanvasEditor;\nvar _c;\n$RefreshReg$(_c, \"CanvasEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ChromePicker","jsxDEV","_jsxDEV","CanvasEditor","templateData","_s2","_s","$RefreshSig$","canvasRef","caption","setCaption","text","callToAction","setCallToAction","cta","backgroundColor","setBackgroundColor","showColorPicker","setShowColorPicker","MAX_PICKED_COLORS","pickedColors","setPickedColors","getRandomColors","maskImage","setMaskImage","imageFile","setImageFile","UploadBox","handleMaskImageUpload","fileName","setFileName","canvas","current","ctx","getContext","clearRect","width","height","fillStyle","fillRect","designPattern","Image","src","urls","design_pattern","onload","drawImage","image_mask","x","y","mask","addRandomQueryParam","save","strokeStyle","lineWidth","strokeRect","restore","drawText","drawCTA","handleCaptionChange","event","target","value","handleCallToActionChange","handleBackgroundColorChange","color","hex","newColors","length","pop","handleColorPickerToggle","handleFileChange","replace","url","randomQueryParam","Math","floor","random","data","text_color","font","font_size","textAlign","alignment","lines","breakTextIntoLines","max_characters_per_line","offsetY","position","forEach","line","fillText","wrapText","wrapLength","words","split","currentLine","word","testLine","testWidth","measureText","push","ctaX","ctaY","ctaWidth","ctaHeight","cornerRadius","textColor","bgColor","padding","beginPath","moveTo","arcTo","closePath","fill","textBaseline","wrappedText","lineHeight","textY","index","colors","i","toString","maxCharactersPerLine","className","children","ref","style","_jsxFileName","lineNumber","columnNumber","background","name","type","onChange","display","flexDirection","justifyContent","alignItems","marginBottom","border","borderRadius","transition","placeholder","marginTop","slice","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/OneDrive/Desktop/college/web devlopment/Zepto Prject/my-ap/src/CanvasEditor.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport './styles.css';\r\n\r\nconst CanvasEditor = ({ templateData }) => {\r\n  const canvasRef = useRef(null);\r\n  const [caption, setCaption] = useState(templateData.caption.text);\r\n  const [callToAction, setCallToAction] = useState(templateData.cta.text);\r\n  const [backgroundColor, setBackgroundColor] = useState('#0369A1'); // Default background color\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const MAX_PICKED_COLORS = 5;\r\n  const [pickedColors, setPickedColors] = useState(getRandomColors());\r\n  const [maskImage, setMaskImage] = useState(null);\r\n  const [imageFile, setImageFile] = useState(null);\r\n  // const [fileName, setFileName] = useState('No file chosen');\r\n\r\n  const UploadBox = ({ handleMaskImageUpload }) => {\r\n    const [fileName, setFileName] = useState('Select your file!');\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw background color\r\n    ctx.fillStyle = backgroundColor;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Load design pattern\r\n    const designPattern = new Image();\r\n    designPattern.src = templateData.urls.design_pattern;\r\n    designPattern.onload = () => {\r\n      ctx.drawImage(designPattern, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Apply mask\r\n      if (maskImage) {\r\n        ctx.drawImage(maskImage, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n      } else {\r\n        const mask = new Image();\r\n        mask.src = addRandomQueryParam(templateData.urls.mask);\r\n        mask.onload = () => {\r\n          ctx.drawImage(mask, templateData.image_mask.x, templateData.image_mask.y, templateData.image_mask.width, templateData.image_mask.height);\r\n        };\r\n      }\r\n\r\n      // Apply mask stroke\r\n      ctx.save();\r\n      ctx.strokeStyle = 'white';\r\n      ctx.lineWidth = 10;\r\n      ctx.strokeRect(templateData.image_mask.x - 5, templateData.image_mask.y - 5, templateData.image_mask.width + 10, templateData.image_mask.height + 10);\r\n      ctx.restore();\r\n\r\n      // Draw caption\r\n      drawText(ctx, caption, templateData.caption);\r\n\r\n      // Draw call to action\r\n      drawCTA(ctx, callToAction, templateData.cta);\r\n    };\r\n  }, [backgroundColor, caption, callToAction, maskImage, templateData]);\r\n\r\n  const handleCaptionChange = (event) => {\r\n    setCaption(event.target.value);\r\n  };\r\n\r\n  const handleCallToActionChange = (event) => {\r\n    setCallToAction(event.target.value);\r\n  };\r\n\r\n  const handleBackgroundColorChange = (color) => {\r\n    setBackgroundColor(color.hex);\r\n    let newColors = [color.hex, ...pickedColors];\r\n    if (newColors.length > 5) {\r\n      newColors.pop();\r\n    }\r\n    setPickedColors(newColors);\r\n  };\r\n\r\n  const handleColorPickerToggle = () => {\r\n    setShowColorPicker(!showColorPicker);\r\n  };\r\n\r\n  // const handleMaskImageUpload = (event) => {\r\n  //   const file = event.target.files[0];\r\n  //   setFileName(event.target.files[0].name);\r\n  //   if (file) {\r\n  //     const reader = new FileReader();\r\n  //     reader.onload = (e) => {\r\n  //       const image = new Image();\r\n  //       image.onload = () => {\r\n  //         setMaskImage(image);\r\n  //       };\r\n  //       image.src = e.target.result;\r\n  //     };\r\n  //     reader.readAsDataURL(file);\r\n  //     setImageFile(file);\r\n  //   }\r\n  // };\r\n  const handleFileChange = (event) => {\r\n    handleMaskImageUpload(event);\r\n    setFileName(event.target.value.replace(/.*(\\/|\\\\)/, ''));\r\n  };\r\n\r\n  const addRandomQueryParam = (url) => {\r\n    const randomQueryParam = Math.floor(Math.random() * 100000);\r\n    return `${url}?random=${randomQueryParam}`;\r\n  };\r\n\r\n  const drawText = (ctx, text, data) => {\r\n    ctx.fillStyle = data.text_color;\r\n    ctx.font = `${data.font_size}px Arial`;\r\n    ctx.textAlign = data.alignment;\r\n\r\n    const lines = breakTextIntoLines(text, data.max_characters_per_line);\r\n    let offsetY = data.position.y;\r\n    lines.forEach((line) => {\r\n      ctx.fillText(line, data.position.x, offsetY);\r\n      offsetY += data.font_size + 5;\r\n    });\r\n  };\r\n\r\n  const drawCTA = (ctx, text, data) => {\r\n    const wrapText = (text, wrapLength) => {\r\n      const words = text.split(' ');\r\n      const lines = [];\r\n      let currentLine = '';\r\n\r\n      words.forEach(word => {\r\n        const testLine = currentLine + word + ' ';\r\n        const testWidth = ctx.measureText(testLine).width;\r\n        if (testWidth > wrapLength && currentLine !== '') {\r\n          lines.push(currentLine);\r\n          currentLine = word + ' ';\r\n        } else {\r\n          currentLine = testLine;\r\n        }\r\n      });\r\n\r\n      lines.push(currentLine);\r\n      return lines;\r\n    };\r\n\r\n    const ctaX = data.position.x;\r\n    const ctaY = data.position.y;\r\n    const ctaWidth = data.width || 200;\r\n    const ctaHeight = data.height || 80;\r\n    const cornerRadius = data.cornerRadius || 10;\r\n    const textColor = data.text_color || 'white';\r\n    const bgColor = data.backgroundColor || 'black';\r\n    const padding = data.padding || 16;\r\n    const wrapLength = data.wrapLength || 20;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(ctaX + cornerRadius, ctaY);\r\n    ctx.arcTo(ctaX + ctaWidth, ctaY, ctaX + ctaWidth, ctaY + ctaHeight, cornerRadius);\r\n    ctx.arcTo(ctaX + ctaWidth, ctaY + ctaHeight, ctaX, ctaY + ctaHeight, cornerRadius);\r\n    ctx.arcTo(ctaX, ctaY + ctaHeight, ctaX, ctaY, cornerRadius);\r\n    ctx.arcTo(ctaX, ctaY, ctaX + ctaWidth, ctaY, cornerRadius);\r\n    ctx.closePath();\r\n\r\n    ctx.fillStyle = bgColor;\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = textColor;\r\n    ctx.font = `${data.font_size || 30}px Arial`;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n\r\n    const wrappedText = wrapText(text, wrapLength);\r\n    const lineHeight = ctx.measureText('M').width;\r\n\r\n    const textY = ctaY + ctaHeight / 2 - (lineHeight * wrappedText.length) / 2;\r\n\r\n    wrappedText.forEach((line, index) => {\r\n      ctx.fillText(line, ctaX + ctaWidth / 2, textY + index * lineHeight + padding / 2);\r\n    });\r\n  };\r\n\r\n  function getRandomColors() {\r\n    const colors = [];\r\n    for (let i = 0; i < MAX_PICKED_COLORS; i++) {\r\n      colors.push('#' + Math.floor(Math.random() * 16777215).toString(16));\r\n    }\r\n    return colors;\r\n  }\r\n\r\n  const breakTextIntoLines = (text, maxCharactersPerLine) => {\r\n    const lines = [];\r\n    let currentLine = '';\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n      currentLine += text[i];\r\n      if (currentLine.length === maxCharactersPerLine || i === text.length - 1) {\r\n        lines.push(currentLine);\r\n        currentLine = '';\r\n      }\r\n    }\r\n    return lines;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n        <canvas\r\n          ref={canvasRef}\r\n          width={1080}\r\n          height={1080}\r\n          className=\"border border-gray-400\"\r\n          style={{ width: '400px', height: '400px' }}\r\n        />\r\n        \r\n      <div className=\"options-container\">\r\n      <h1 className='heading'>Ad Customization</h1>\r\n        <div className=\"container\">\r\n        <form className=\"form\">\r\n      <div className=\"file-upload-wrapper\" style={{background: 'linear-gradient(to top right, #bf7a6b 0%, #e6d8a7 100%)'}} data-text={fileName}>\r\n        <input \r\n          name=\"file-upload-field\" \r\n          type=\"file\" \r\n          className=\"file-upload-field\" \r\n          onChange={handleFileChange} \r\n        />\r\n      </div>\r\n    </form>\r\n        </div>\r\n        <div className=\"mt-4 flex flex-col items-center\" style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'row'}}>\r\n          \r\n        <h2>Edit Contents</h2>\r\n          <div className='textcont'>\r\n          <h4>Ad Content</h4>\r\n            <input\r\n            type=\"text\"\r\n            value={caption}\r\n            onChange={handleCaptionChange}\r\n            style={{width: '100%',\r\n              padding: '10px',\r\n              marginBottom: '10px',\r\n              border: '1px solid #dddddd',\r\n              borderRadius: '5px',\r\n              transition: 'border 0.3s ease'}}\r\n            placeholder=\"Enter Caption\"\r\n            className=\"border border-gray-400 p-2 mb-2\"\r\n          />\r\n          </div>\r\n          <div className='captioncont'>\r\n          <input\r\n            type=\"text\"\r\n            value={callToAction}\r\n            onChange={handleCallToActionChange}\r\n            style={{width: '100%',\r\n              padding: '10px',\r\n              marginTop: '20px',\r\n              border: '1px solid #dddddd',\r\n              borderRadius: '5px',\r\n              transition: 'border 0.3s ease'}}\r\n            placeholder=\"Enter CTA Text\"\r\n            className=\"border border-gray-400 p-2 mb-2\"\r\n          />\r\n          </div>\r\n          <h3>Choose your color</h3>\r\n          <div className=\"color-picker\">\r\n            <div className=\"color-list\">\r\n            \r\n              {/* Display last five picked colors */}\r\n              {pickedColors.slice(0, 5).map((color, index) => (\r\n                <button\r\n                  key={index}\r\n                  className=\"color-box\"\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => setBackgroundColor(color)}\r\n                />\r\n              ))}\r\n              {/* Button with + icon */}\r\n              \r\n              <button className=\"color-picker-btn\" onClick={handleColorPickerToggle}>\r\n                +\r\n              </button>\r\n            </div>\r\n            {showColorPicker && (\r\n              <ChromePicker color={backgroundColor} onChange={handleBackgroundColorChange} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\n\r\nexport default CanvasEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}